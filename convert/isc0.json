{
    "name":"isc0",
    "availableTranslation":{
        "nasm_x86_x64":"nasm"
    },
    "tokens":{
        "emptyLine":"^\n*$",
        "all":".*",

        "doubleSlash":"[/]{2}",
        "indentation":"^[ ]{0,}",
        "optionalSpace":"[ ]{0,}",
        "space":"[ ]{1,}",
        "comma":",",

        "numbers":"[0-9]{1,}",
        "communData":"[a-zA-Z0-9_\\[\\]\\-\\+\\*\\$]{1,}",

        "InstMode":"mode",
        "InstGlobal":"global",

        "InstFunc":"func",
        "InstCallFunc":"[^a-zA-Z]call",
        "InstSyscall":"syscall",
        "InstSectConstant":"CONST:",
        "InstSectVar":"VAR:",
        "InstSectCode":"CODE:",
        "InstEgal":"=",
        "InstEquivalent":"equ",        
        "InstReserve":"reserve",
        "InstPush":"push",
        "InstPop":"pop",
        "InstCompare":"if",
        
        "TypeByte":"byte|BYTE",
        "TypeWord":"word|WORD",
        "TypeDouble":"double|DOUBLE",
        "TypeQuadruple":"quadruple|QUADRUPLE",
        "AnyType":"byte|BYTE|word|WORD|double|DOUBLE|quadruple|QUADRUPLE"

    },
    "instructions":{
        "emptyLine":{
            "syntax":[
                "emptyLine"
            ],
            "snippet":null,
            "translation":{
                "nasm_x86_x64":""
            }
        },
        "commentLine":{
            "syntax":[
                "indentation",
                "doubleSlash",
                "all"
            ],
            "snippet":null,
            "translation":{
                "nasm_x86_x64":"%{1};%{3}"
            }
        },

        "architectureMode":{
            "syntax":[
                "indentation",
                "InstMode",
                "space",
                "numbers"
            ],
            "snippet":{
                "output":"mode ${1|8,16,32,64|}",
                "documentation":"Set architecture mode",
                "commitChars":["."]
            },
            "translation":{
                "nasm_x86_x64":"%{1}bits%{3}%{4}"
            }
        },
        "global":{
            "syntax":[
                "indentation",
                "InstGlobal",
                "space",
                "communData"
            ],
            "snippet":{
                "output":"global ${1}",
                "documentation":"Set entry point",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}global%{3}%{4}"
            }
        },

        "function":{
            "syntax":[
                "indentation",
                "InstFunc",
                "space",
                "communData"
            ],
            "snippet":{
                "output":"func ${1}:",
                "documentation":"Set label",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}%{4}:"
            }
        },
        "callFunction":{
            "syntax":[
                "indentation",
                "InstCallFunc",
                "space",
                "communData"
            ],
            "snippet":{
                "output":"call ${1}",
                "documentation":"Call a function",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}call %{3}%{4}"
            }
        },

        "syscall":{
            "syntax":[
                "indentation",
                "InstSyscall",
                "space",
                "communData"
            ],
            "snippet":{
                "output":"syscall ${1}",
                "documentation":"System call",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}int%{3}%{4}"
            }
        },

        "sectionConstant":{
            "syntax":[
                "indentation",
                "InstSectConstant"
            ],
            "snippet":{
                "output":"CONST:",
                "documentation":"Constants section",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}section .data"
            }
        },
        "sectionVariable":{
            "syntax":[
                "indentation",
                "InstSectVar"
            ],
            "snippet":{
                "output":"VAR:",
                "documentation":"Variables section",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}section .bss"
            }
        },
        "sectionCode":{
            "syntax":[
                "indentation",
                "InstSectCode"
            ],
            "snippet":{
                "output":"CODE:",
                "documentation":"Code section",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}section .text"
            }
        },

        "assign":{
            "syntax":[
                "indentation",
                "communData",
                "space",
                "InstEgal",
                "space",
                "communData"
            ],
            "snippet":{
                "output":"${1} = ${2}",
                "documentation":"Assign a register with value",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}mov %{2},%{6}"
            }
        },
        "equivalent":{
            "syntax":[
                "indentation",
                "InstEquivalent",
                "space",
                "communData",
                "space",
                "communData"
            ],
            "snippet":{
                "output":"equ ${1} ${2}",
                "documentation":"Equivalent constant",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}%{4} equ %{6}"
            }
        },

        "defineByte":{
            "syntax":[
                "indentation",
                "TypeByte",
                "space",
                "communData",
                "space",
                "all"
            ],
            "snippet":{
                "output":"byte ${1} ${2}",
                "documentation":"Byte constant",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}%{4} db %{6}"
            }
        },
        "defineWord":{
            "syntax":[
                "indentation",
                "TypeWord",
                "space",
                "communData",
                "space",
                "all"
            ],
            "snippet":{
                "output":"word ${1} ${2}",
                "documentation":"Word constant",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}%{4} dw %{6}"
            }
        },
        "defineDouble":{
            "syntax":[
                "indentation",
                "TypeDouble",
                "space",
                "communData",
                "space",
                "all"
            ],
            "snippet":{
                "output":"double ${1} ${2}",
                "documentation":"Double constant",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}%{4} dd %{6}"
            }
        },
        "defineQuadruple":{
            "syntax":[
                "indentation",
                "TypeQuadruple",
                "space",
                "communData",
                "space",
                "all"
            ],
            "snippet":{
                "output":"quadruple ${1} ${2}",
                "documentation":"Quadruple constant",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}%{4} dq %{6}"
            }
        },
        "defineTen":{
            "syntax":[
                "indentation",
                "TypeTen",
                "space",
                "communData",
                "space",
                "all"
            ],
            "snippet":{
                "output":"ten ${1} ${2}",
                "documentation":"Ten constant",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}%{4} dt %{6}"
            }
        },

        "reserveByte":{
            "syntax":[
                "indentation",
                "InstReserve",
                "space",
                "TypeByte",
                "space",
                "communData",
                "space",
                "communData"
            ],
            "snippet":{
                "output":"reserve byte ${1} ${2}",
                "documentation":"Byte variable",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}%{6} resb %{8}"
            }
        },
        "reserveWord":{
            "syntax":[
                "indentation",
                "InstReserve",
                "space",
                "TypeWord",
                "space",
                "communData",
                "space",
                "communData"
            ],
            "snippet":{
                "output":"reserve word ${1} ${2}",
                "documentation":"Word variable",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}%{6} resw %{8}"
            }
        },
        "reserveDouble":{
            "syntax":[
                "indentation",
                "InstReserve",
                "space",
                "TypeDouble",
                "space",
                "communData",
                "space",
                "communData"
            ],
            "snippet":{
                "output":"reserve double ${1} ${2}",
                "documentation":"Double variable",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}%{6} resd %{8}"
            }
        },
        "reserveQuadruple":{
            "syntax":[
                "indentation",
                "InstReserve",
                "space",
                "TypeQuadruple",
                "space",
                "communData",
                "space",
                "communData"
            ],
            "snippet":{
                "output":"reserve quadruple ${1} ${2}",
                "documentation":"Quadruple variable",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}%{6} resq %{8}"
            }
        },
        "reserveTen":{
            "syntax":[
                "indentation",
                "InstReserve",
                "space",
                "TypeTen",
                "space",
                "communData",
                "space",
                "communData"
            ],
            "snippet":{
                "output":"reserve ten ${1} ${2}",
                "documentation":"Ten variable",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}%{6} rest %{8}"
            }
        },

        "stackPush":{
            "syntax":[
                "indentation",
                "InstPush",
                "space",
                "all"
            ],
            "snippet":{
                "output":"push ${1}",
                "documentation":"Push data into the stack",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}push %{4}"
            }
        },
        "stackPop":{
            "syntax":[
                "indentation",
                "InstPop",
                "space",
                "all"
            ],
            "snippet":{
                "output":"pop ${1}",
                "documentation":"Get data from the stack",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}pop %{4}"
            }
        },


        "if":{
            "syntax":[
                "indentation",
                "InstCompare",
                "space",
                "AnyType",
                "space",
                "communData",
                "optionalSpace",
                "comma",
                "optionalSpace",
                "AnyType",
                "space",
                "communData"
            ],
            "snippet":{
                "output":"if ${1|byte,word,double,quadruple|} ${2}, ${3|byte,word,double,quadruple|} ${4}",
                "documentation":"Get data from the stack",
                "commitChars":null
            },
            "translation":{
                "nasm_x86_x64":"%{1}cmp %{4}%{5}%{6}%{7}%{8}%{9}%{10}%{11}%{12}"
            }
        }

    }
}